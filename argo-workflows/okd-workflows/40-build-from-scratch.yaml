kind: ClusterWorkflowTemplate
apiVersion: argoproj.io/v1alpha1
metadata:
  name: build-okd
spec:
  entrypoint: entrypoint
  arguments:
    parameters:
      - name: architectures
      - name: cleanup
      - default: ""
        name: os-image
        value: ""
      - name: os-name
      - default: ""
        name: os-buildconfig
        value: ""
      - default: quay.io/<org>/okd-release-argo:4.13.0-0.okd-2021-12-11-200126
        name: release-image-location
      - default: quay.io/<org>/okd-release-argo
        name: release-mirror-location
      - default: registry-robot-token
        name: registry-credentials-secret-ref
  templates:
    - name: entrypoint
      steps:
        - - name: cleanup
            when: "{{workflow.parameters.cleanup}}==true"
            template: cleanup
        - - name: recreate-os-imagestreamtags
            template: recreate-os-imagestreamtags
            when: '''{{workflow.parameters.os-buildconfig}}''=='''''
            arguments:
              parameters:
                - name: os-name
                  value: "{{item}}"
                - name: os-image
                  value: "{{workflow.parameters.os-image}}"
            withItems:
              - "{{workflow.parameters.os-name}}"
              - machine-os-content
        - - name: initial
            template: initial
        - - name: batches
            template: batches
        - - name: build-os
            template: build-os
            when: '''{{workflow.parameters.os-buildconfig}}''!='''''
        - - name: package-release
            template: package-release
            arguments:
              parameters:
                - name: release-image-location
                  value: '{{workflow.parameters.release-image-location}}'
                - name: release-mirror-location
                  value: '{{workflow.parameters.release-mirror-location}}'
    - name: build-os
      steps:
        - - arguments:
              parameters:
                - name: build-config-name
                  value: '{{workflow.parameters.os-buildconfig}}'
            name: build-os
            template: build-multiarch-workflow
        - - inline:
              resource:
                action: apply
                manifest: |
                  apiVersion: image.openshift.io/v1
                  kind: ImageStreamTag
                  metadata:
                    name: release:machine-os-content
                  tag:
                    from:
                      kind: ImageStreamTag
                      name: "release:{{workflow.parameters.os-name}}"
                    importPolicy:
                      importMode: PreserveOriginal
            name: set-machine-os-content
    - name: build-multiarch-workflow
      inputs:
        parameters:
          - name: build-config-name
      retryStrategy:
        backoff:
          duration: 1m
          factor: "2"
          maxDuration: 60m
        limit: "3"
        retryPolicy: Always
      steps:
        - - name: generate-memoization-key
            arguments:
              parameters:
                - name: build-config-name
                  value: "{{inputs.parameters.build-config-name}}"
            template: prepare-memoization-key
        - - name: multiarch-build
            template: multiarch-builds
            arguments:
              parameters:
                - name: build-config-name
                  value: "{{inputs.parameters.build-config-name}}"
                - name: memoization-key
                  value: "{{steps.generate-memoization-key.outputs.parameters.memoization-key}}"
    - name: initial
      failFast: true
      parallelism: 1
      steps:
        - - name: prepare-build-images
            template: build-multiarch-workflow
            arguments:
                parameters:
                  - name: build-config-name
                    value: "{{item}}"
                  - name: architectures
                    value: "{{workflow.parameters.architectures}}"
            withItems:
              - builder
              - forked-dockerfiles
              - base
              - cli
    - name: batches
      failFast: true
      parallelism: 12
      steps:
        - - name: batch-01
            template: build-multiarch-workflow
            arguments:
              parameters:
                - name: build-config-name
                  value: "{{item}}"
                - name: architectures
                  value: "{{workflow.parameters.architectures}}"
            withItems:
            - agent-installer-node-agent
            - agent-installer-orchestrator
            - alibaba-cloud-controller-manager
            - alibaba-cloud-csi-driver
            - alibaba-disk-csi-driver-operator
            - alibaba-machine-controllers
            - apiserver-network-proxy
            - aws-cloud-controller-manager
            - aws-cluster-api-controllers
            - aws-ebs-csi-driver-operator
            - aws-ebs-csi-driver
            - aws-machine-controllers
            - aws-pod-identity-webhook
            - azure-cloud-controller-manager
            - azure-cloud-node-manager
            - azure-cluster-api-controllers
            - azure-disk-csi-driver-operator
            - azure-disk-csi-driver
            - azure-file-csi-driver-operator
            - azure-file-csi-driver
            - azure-machine-controllers
            - baremetal-machine-controllers
            - baremetal-operator
            - baremetal-runtimecfg
            - branding
            - cloud-credential-operator
            - cloud-network-config-controller
            - cluster-authentication-operator
            - cluster-autoscaler-operator
            - cluster-autoscaler
            #- cluster-baremetal-operator
            - cluster-bootstrap
            - cluster-capi-controllers
            - cluster-capi-operator
            - cluster-cloud-controller-manager-operator
            - cluster-config-operator
            - cluster-control-plane-machine-set-operator
            - cluster-csi-snapshot-controller-operator
            - cluster-dns-operator
            - cluster-etcd-operator
            - cluster-image-registry-operator
            - cluster-ingress-operator
            - cluster-kube-apiserver-operator
            - cluster-kube-cluster-api-operator
            - cluster-kube-controller-manager-operator
            - cluster-kube-scheduler-operator
            - cluster-kube-storage-version-migrator-operator
            - cluster-machine-approver
            - cluster-monitoring-operator
            - cluster-network-operator
            - cluster-openshift-apiserver-operator
            - cluster-openshift-controller-manager-operator
            - cluster-policy-controller
            - cluster-samples-operator
            - cluster-storage-operator
            - cluster-update-keys
            - cluster-version-operator
            - configmap-reloader
            - console-operator
            - container-networking-plugins
            - contour-operator
            - contour
            - coredns
            - csi-driver-manila-operator
            - csi-driver-manila
            - csi-driver-nfs
            - csi-driver-shared-resource-operator
            - csi-driver-shared-resource-webhook
            - csi-driver-shared-resource
            - csi-external-attacher
            - csi-external-provisioner
            - csi-external-resizer
            - csi-external-snapshotter
            - csi-livenessprobe
            - csi-node-driver-registrar
            - csi-snapshot-controller
            - csi-snapshot-validation-webhook
            - docker-builder
            - docker-registry
            - egress-router-cni
            - etcd
            - external-dns
            - gcp-cloud-controller-manager
            - gcp-cluster-api-controllers
            - gcp-machine-controllers
            - gcp-pd-csi-driver-operator
            - gcp-pd-csi-driver
            - haproxy-router-base
            - hypershift
            - ibm-cloud-controller-manager
            - ibm-vpc-block-csi-driver-operator
            - ibm-vpc-block-csi-driver
            - ibm-vpc-node-label-updater
            - ibmcloud-machine-controllers
            - insights-operator
            - ironic-agent
            - ironic-machine-os-downloader
            - ironic-static-ip-manager
            - k8s-prometheus-adapter
            - keepalived-ipfailover
            - kube-proxy
            - kube-rbac-proxy
            - kube-state-metrics
            - kube-storage-version-migrator
            - local-storage-static-provisioner
            - machine-api-operator
            #- machine-config-operator
            - machine-image-customization-controller
            - multus-admission-controller
            - multus-cni
            - multus-networkpolicy
            - multus-route-override-cni
            - multus-whereabouts-ipam-cni
            - must-gather
            - bond-cni
            - network-metrics-daemon
            - nutanix-machine-controllers
            - oauth-apiserver
            - oauth-proxy
            - oauth-server
            - oc-mirror
            - cli-artifacts
            - openshift-apiserver
            - openshift-controller-manager
            - openshift-state-metrics
            - openstack-cinder-csi-driver-operator
            - openstack-cinder-csi-driver
            - openstack-cloud-controller-manager
            - openstack-machine-api-provider
            - openstack-machine-controllers
            - operator-lifecycle-manager
            - operator-marketplace
            - ovirt-csi-driver-operator
            - ovirt-csi-driver
            - ovirt-installer
            - ovirt-machine-controllers
            - pod
            - powervs-cloud-controller-manager
            - powervs-machine-controllers
            - prom-label-proxy
            - prometheus-alertmanager
            - prometheus-config-reloader
            - prometheus-node-exporter
            - prometheus-operator-admission-webhook
            - prometheus-operator
            - prometheus
            - route-controller-manager
            - service-ca-operator
            - telemeter
            - thanos
            - vsphere-cloud-controller-manager
            - vsphere-cluster-api-controllers
            - vsphere-csi-driver-operator
            - vsphere-csi-driver-syncer
            - vsphere-csi-driver
            - vsphere-problem-detector
            - cluster-node-tuning-operator
            #- ironic
            - ironic-hardware-inventory-recorder
            - libvirt-machine-controllers
            - operator-registry
            #- sdn
            - console
            - baremetal-installer
            - installer-artifacts
            - installer
            - hyperkube
        - - name: batch-02
            template: build-multiarch-workflow
            arguments:
              parameters:
                - name: build-config-name
                  value: "{{item}}"
                - name: architectures
                  value: "{{workflow.parameters.architectures}}"
            withItems:
            - agent-installer-api-server
            - agent-installer-csr-approver
            - artifacts
            - tools
            - haproxy-router
            # - ovn-kubernetes-base
            - machine-os-images
            - deployer
        - - name: batch-03
            template: build-multiarch-workflow
            arguments:
              parameters:
                - name: build-config-name
                  value: "{{item}}"
                - name: architectures
                  value: "{{workflow.parameters.architectures}}"
            withItems:
            - tests
            #- network-tools
            #- ovn-kubernetes-microshift
            #- ovn-kubernetes
    - name: cleanup
      steps:
        - - name: delete-release-imagestream
            continueOn:
              failed: true
              error: true
            inline:
              resource:
                action: delete
                manifest: |
                  apiVersion: image.openshift.io/v1
                  kind: ImageStream
                  metadata:
                    name: "release"
        - - name: delete-memoization-configmap
            template: delete-memoization-configmap
        - - name: create-release-imagestream
            inline:
              resource:
                action: create
                manifest: |
                  apiVersion: image.openshift.io/v1
                  kind: ImageStream
                  metadata:
                    name: release
                  spec:
                    lookupPolicy:
                      local: true
                    tags:
                      - name: kuryr-cni
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                        importPolicy:
                          importMode: PreserveOriginal
                      - name: kuryr-controller
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                        importPolicy:
                          importMode: PreserveOriginal
                      - name: powervs-block-csi-driver-operator
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                        importPolicy:
                          importMode: PreserveOriginal
                      - name: powervs-block-csi-driver
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                        importPolicy:
                          importMode: PreserveOriginal
                      - name: ibmcloud-cluster-api-controllers
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                        importPolicy:
                          importMode: PreserveOriginal
                      - name: cluster-baremetal-operator
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: ironic
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: machine-config-operator
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: sdn
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: ovn-kubernetes-base
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: ovn-kubernetes
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: ovn-kubernetes-microshift
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
                      - name: network-tools
                        from:
                          kind: DockerImage
                          name: registry.access.redhat.com/ubi9-minimal:9.0.0
                        referencePolicy:
                          type: Source
    - name: recreate-os-imagestreamtags
      inputs:
        parameters:
          - name: os-name
          - name: os-image
      steps:
        - - name: deleting-imagestreamtags
            continueOn:
              error: true
              failed: true
            inline:
              resource:
                action: delete
                manifest: |
                  apiVersion: image.openshift.io/v1
                  kind: ImageStreamTag
                  metadata:
                    name: release:{{inputs.parameters.os-name}}
        - - name: create-imagestreamtags
            inline:
              resource:
                action: create
                manifest: |
                  apiVersion: image.openshift.io/v1
                  kind: ImageStreamTag
                  metadata:
                    name: release:{{inputs.parameters.os-name}}
                  tag:
                    from:
                      kind: DockerImage
                      name: "{{inputs.parameters.os-image}}"
                    referencePolicy:
                      type: Source
                    importPolicy:
                      importMode: PreserveOriginal
    - name: multiarch-builds
      inputs:
        parameters:
          - name: build-config-name
          - name: memoization-key
      memoize:
        key: "{{inputs.parameters.memoization-key}}"
        maxAge: "6h"
        cache:
          configMap:
            name: build-okd
      resource:
        action: create
        successCondition: status.phase == Succeeded
        failureCondition: status.phase in (Failed, Error)
        setOwnerReference: true
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: {{inputs.parameters.build-config-name}}-wf-
          spec:
            arguments:
              parameters:
              - name: build-config-name
                value: "{{inputs.parameters.build-config-name}}"
              - name: architectures
                value: "{{workflow.parameters.architectures}}"
            workflowTemplateRef:
              name: build-multiarch-image
              clusterScope: true
    - name: prepare-memoization-key
      volumes:
        - name: tmp
          emptyDir: {}
      inputs:
        parameters:
          - name: build-config-name
      outputs:
        parameters:
          - name: memoization-params
            valueFrom:
              path: /tmp/volume/memoization-params
          - name: memoization-key
            valueFrom:
              path: /tmp/volume/memoization-key
      containerSet:
        containers:
          - name: prepare-memoization-params
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli
            command: [bash, -c]
            args:
              - |
                set -ex
                echo "Preparing memoization params"
                git_uri=$(oc get bc {{inputs.parameters.build-config-name}} -o jsonpath='{.spec.source.git.uri}')
                git_revision=$(oc get bc {{inputs.parameters.build-config-name}} -o jsonpath='{.spec.source.git.ref}')
                echo "git_uri=\"$git_uri\"" >> /tmp/volume/memoization-params
                echo "git_revision=\"$git_revision\"" >> /tmp/volume/memoization-params
                echo "name=\"{{inputs.parameters.build-config-name}}\"" >> /tmp/volume/memoization-params
            volumeMounts:
              - name: tmp
                mountPath: /tmp/volume
          - name: main
            # this is on docker hub
            image: alpine/git
            command: [sh, -c]
            args:
              - |
                set -exo pipefail
                echo "Getting git revision sha"
                . /tmp/volume/memoization-params
                if [ -z "${git_uri}" ] || [ -z "${git_revision}" ]; then
                  # TODO: this is for builds not using a git repo as source. For example, builds depending on previously
                  # built images should use another strategy to define the memoization key
                  echo "${name}-$(cat /run/secrets/kubernetes.io/serviceaccount/namespace)-$(cat /proc/sys/kernel/random/uuid)" > /tmp/volume/memoization-key
                  exit 0
                fi
                git_revision_sha="$(git ls-remote ${git_uri} ${git_revision} | cut -f1)" 
                echo "git_revision_sha=\"$git_revision_sha\"" >> /tmp/volume/memoization-params
                key="${name}-${git_revision_sha}"
                echo "${key}" > /tmp/volume/memoization-key
            volumeMounts:
              - name: tmp
                mountPath: /tmp/volume
            dependencies:
              - prepare-memoization-params
    - name: delete-memoization-configmap
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: build-okd
            namespace: argo-workflows
            # TODO: is there a way for this configmap to land in the same namespace as the workflow?
    - name: package-release
      inputs:
        parameters:
          - default: quay.io/<org>/okd-release-argo:4.13.0-0.okd-fcos-bfs
            name: release-image-location
          - default: quay.io/<org>/okd-release-argo
            name: release-mirror-location
      containerSet:
        containers:
          - args:
              - |
                #!/bin/bash
                set -ex
                cp /tmp/credentials/.dockerconfigjson /tmp/readwrite/.dockerconfigjson
                oc registry login -a /tmp/readwrite/.dockerconfigjson
                oc adm release new \
                  --registry-config=/tmp/readwrite/.dockerconfigjson \
                  --from-image-stream release \
                  --insecure=true \
                  --mirror {{inputs.parameters.release-mirror-location}} \
                  --to-image {{inputs.parameters.release-image-location}} \
                  --name=$(echo "{{inputs.parameters.release-image-location}}" | cut -d: -f2) \
                  --keep-manifest-list=true
                  --allow-missing-images=true # TODO remove
            command:
              - bash
              - -c
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli
            name: package-release
            volumeMounts:
              - mountPath: /tmp/credentials
                name: credentials
                readOnly: false
              - mountPath: /tmp/readwrite
                name: readwrite
                readOnly: false
      volumes:
        - name: credentials
          secret:
            secretName: '{{workflow.parameters.registry-credentials-secret-ref}}'
        - emptyDir: {}
          name: readwrite
